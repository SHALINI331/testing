// testng session1 grow 

package runner;

import java.net.URL;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import utils.EventHandler;   // ✅ keep your default listener in utils

public class TestSample {

    static WebDriver driver;

    @BeforeClass
    public void setup() {
        try {
            driver = new RemoteWebDriver(new URL("http://localhost:4444"), new ChromeOptions());

            driver.manage().window().maximize();
            driver.manage().timeouts().implicitlyWait(java.time.Duration.ofSeconds(10));
            driver.manage().timeouts().pageLoadTimeout(java.time.Duration.ofSeconds(10));

            // ✅ Use your default listener from utils
            WebDriverListener listener = new EventHandler();
            driver = new EventFiringDecorator<>(listener).decorate(driver);

            driver.get("https://groww.in/");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Test(dependsOnGroups = {"login"})
    public void test1() throws InterruptedException {
        driver.findElement(By.xpath("//button/span[contains(text(),'Continue')]")).click();
        Thread.sleep(5000);
    }

    @Test(groups = {"login"})
    public void test2() throws InterruptedException {
        driver.findElement(By.xpath("//button/span[contains(text(),'Login/Sign up')]")).click();

        String poptext = driver.findElement(By.xpath("//div[@id='lils382InitialLoginScreen']")).getText();

        // ✅ No separate class – use TestNG Assert directly
        Assert.assertTrue(poptext.contains("Welcome to Groww"),
                "Text verification failed! Expected: Welcome to Groww, but got: " + poptext);

        Thread.sleep(2000);
    }

    @AfterClass(alwaysRun = true)
    public void teardown() {
        if (driver != null) {
            System.out.println("Closing browser session...");
            driver.quit();
        }
    }
}




utils -> Screenshots.java


package utils;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.io.FileHandler;

// public class Screenshots{
    
//     public static String takeScreenshot(WebDriver driver, String fileName) {
//         // Generate timestamp
//         String timestamp = new SimpleDateFormat("yyyyMMdd-HHmmss").format(new Date());
        
//         // Correct way to get project path
//         String projectPath = System.getProperty("user.dir");
        
//         // Create screenshots directory if it doesn’t exist
//         String screenshotDir = projectPath + "/screenshots";
//         File dir = new File(screenshotDir);
//         if (!dir.exists()) {
//             dir.mkdirs();
//         }

//         // Final screenshot file path
//         String filePath = screenshotDir + "/" + fileName + "_" + timestamp + ".png";
        
//         // Take screenshot
//         File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
        
//          try {
//              FileHandler.copy(src, new File(filePath));
          
//          } catch (IOException e) {
//              e.printStackTrace();
//         }
        
//         return filePath;
//     }
// }

public class Screenshots{

    public static String takeScreenshot(WebDriver driver, String fileName){
        String timestamp=new SimpleDateFormat("yyyyMMdd-HHmmss").format(new Date());

        String projectPath=System.getProperty("user.dir");

        String Screenshotdir=projectPath+"/screenshots";
        File dir=new File(Screenshotdir);
        if(!dir.exists())
        {
            dir.mkdirs();
        }

        String filePath=Screenshotdir+"/"+fileName+"_"+timestamp+".png";

       File src=((TakesScreenshot)driver).getScreenshotAs(  OutputType.FILE);
      
        try {
            FileHandler.copy(src,new File(filePath));
        } catch (IOException e) {
            e.printStackTrace();
        }
        return filePath;
    }

}


testspice.java

package runner;

import java.net.MalformedURLException;
import java.net.URL;
import utils.Screenshots;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import org.testng.annotations.AfterMethod;
import utils.EventHandler;

public class TestSpice {
    public static WebDriver driver;
    
    @BeforeMethod
    public void openBrowser() throws MalformedURLException {
        ChromeOptions options = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), options);
        driver.manage().window().maximize();
        
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        driver.get("https://www.spicejet.com/");
    }
    @Test 
    public void test_spicejet() throws InterruptedException
    {
       // driver.findElement(By.xpath("//div[contains(text(),'Login')]"));
       //driver.findElement(By.xpath("//div[text()='Login']"));

      driver.findElement(By.xpath("//*[@id=\"main-container\"]/div/div[1]/div/div/div[1]/div[2]/div[1]"));

        Screenshots.takeScreenshot(driver, "spicejet");
        Thread.sleep(4000);
    }

    @AfterMethod
    public void closeBrowser() {
        if (driver != null) {
            driver.quit();
        }
    }
}
